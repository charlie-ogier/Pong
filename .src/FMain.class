' Gambas class file

' Added keyboard speed settings and delay controls to improve bat response 04/07/2017
'TODO: Set up a 1 player game

Public siBatL As Short                                                                          'LH Bat position
Public siBatR As Short                                                                          'RH bat position
Public siRScore As Short                                                                        'RH Score
Public siLScore As Short                                                                        'LH Score
Public BatL As Bat                                                                              'LH Bat
Public BatR As Bat                                                                              'RH Bat
Public bGameEnd As Boolean                                                                      'Game over indicator
Public bGameStart As Boolean                                                                    'Game start indicator
Public bNewGame As Boolean                                                                      'New game indicator

Public Sub Form_Open()
Stop Event
SetUpLCDs                                                                                       'Set up the Score displays
Settings.Read(Me, "Window")                                                                     'Get the window settings

End

Public Sub SetUpLCDs()

LCDLabelLScore.text = Format(0, "000")                                                          'LH Set the score to zero
LCDLabelRScore.text = Format(0, "000")                                                          'RH Set the score to zero

End

Public Sub GamePlay()                                                                           'Let's play!

FMain.Resizable = False                                                                         'Stop the screen being resized during play
GetExistingKeyboardDelayAndRate                                                                 'Get the existing keyboard delay and repeat rates

While bGameEnd = False                                                                          'While the game is still being played..
  SetNewKeyboardDelayAndRate                                                                    'Set the new keyboard delay and repeat rates
  Start                                                                                         'Add another Ball and play..
Wend

ResetKeyboardDelayAndRate                                                                       'Reset the keyboard delay and repeat rates
bGameEnd = False                                                                                'Reset variable
FMain.Resizable = True                                                                          'Allow screen resizing
PanelPlayArea.Children.Clear                                                                    'Clear the 'Play area of bats and ball'
StartDisplay                                                                                    'Display the keyboard keys to use

End

Public Sub StartDisplay()                                                                       'Display the keyboard keys to use

Wait                                                                                            'Wiz around the 'Event loop'
With LabelStart                                                                                 'With LabelStart
  .Visible = True                                                                               'Make visible
  .Width = PanelPlayArea.Width                                                                  'Set the width
  .Height = PanelPlayArea.Height                                                                'Set the height
  .X = PanelPlayArea.X                                                                          'Set the horizontal pisition
  .Y = PanelPlayArea.Y                                                                          'Set the vertical position
  .Font.Size = PanelPlayArea.Width / 50                                                         'Set the font height
  .Font.Bold = True                                                                             'Set the font to bold
  .Text = "Pong\n\nLeft keys ' A ' & ' Z '\nRight keys [Up Arrow] & [Down Arrow]"               'Set the text
  .Alignment = Align.Center                                                                     'Align it in the centre
  .Foreground = Color.White                                                                     'Set the font's colour
End With

PanelPlayArea.Background = Color.Black                                                          'Background colour

End

Public Sub Start()                                                                              'Game on..
Dim hBall As Ball                                                                               'The ball
Dim siX, siY, siR1, siR2 As Short                                                               'Various variables
Dim bSwitchLR, bSwitchDown As Boolean                                                           'To control the ball's direct

bGameStart = True                                                                               'Set bGameStart to True
hBall = New Ball(PanelPlayArea)                                                                 'Add the ball to the 'Play area'
siR1 = Rand(-40, 40)                                                                            'Get a random number between -40 and 40
siR2 = Rand(-40, 40)                                                                            'Get a random number between -40 and 40
siX = ((PanelPlayArea.Width / 2) - (hBall.Width / 2)) + siR1                                    'Get a position that is middle-ish of the 'Play area' widthwise
siY = ((PanelPlayArea.Height / 2) - (hBall.Height / 2)) + siR2                                  'Get a position that is middle-ish of the 'Play area' heightwise
hBall.X = siX                                                                                   'Put the ball in the middle-ish of the 'Play area' widthwise
hBall.Y = siY                                                                                   'Put the ball in the middle-ish of the 'Play area' heightwise

BatL = New Bat(PanelPlayArea)                                                                   'Create the LH Bat
If bNewGame Then siBatL = PanelPlayArea.Height / 2 - (BatL.Height / 2)                          'If it's a new game the get a middle position
BatL.X = 5                                                                                      'Set the Bat just off the LH edge
BatL.Y = siBatL                                                                                 'Set the Bat's position

BatR = New Bat(PanelPlayArea)                                                                   'Create the RH Bat
If bNewGame Then siBatR = PanelPlayArea.Height / 2 - (BatR.Height / 2)                          'If it's a new game the get a middle position
BatR.X = PanelPlayArea.Width - (BatR.Width + 5)                                                 'Set the Bat just off the RH edge
BatR.Y = siBatR                                                                                 'Set the Bat's position
bNewGame = False                                                                                'Set the bNewGame to false. This stops the Bats being repositioned with each new Ball

Label1.Text = 2
Wait 1
Label1.Text = 1
Wait 1
Label1.Text = ""
Mouse.move(0, 0)

siR1 = Rand(0, 1)                                                                               'Get a random number between 0 and 1
siR2 = Rand(0, 1)                                                                               'Get a random number between 0 and 1

If siR1 = 1 Then bSwitchDown = True                                                             'Randomize - Will the ball go up or down?
If siR2 = 1 Then bSwitchLR = True                                                               'Randomize - Will the ball go left or right?

Do
  Wait 0.002                                                                                    'Ball speed control
  If bSwitchDown Then                                                                           'If the Ball is going down then..
    Inc siY                                                                                     'Increase siY
  Else                                                                                          'Else the Ball is going up so..
    Dec siY                                                                                     'Decrease siY
  End If
  
  If siY >= BatL.Y And siY <= BatL.y + BatL.H And siX < 25 Then                                 'If the Ball 'touches' the LH Bat then
    bSwitchLR = True                                                                            'Set switch to True
  End If 
  If siY >= PanelPlayArea.Height Then bSwitchDown = False                                       'If the Ball has reached the top of the 'Play area' change its direction
  If siY = 0 Then bSwitchDown = True                                                            'If the Ball has reached the bottom of the 'Play area' change its direction
  
  If bSwitchLR Then                                                                             'If the Ball is going right then..
    Inc siX                                                                                     'Increase siX
  Else                                                                                          'Else the Ball is going left so..
    Dec siX                                                                                     'Decrease siX
  End If

  If siY >= BatR.Y And siY <= BatR.y + BatR.H And siX > PanelPlayArea.Width - (BatR.Width + 5 + hBall.Width) Then 'If the Ball 'touches' the RH Bat then
    bSwitchLR = False                                                                           'Change the Ball's direction
  End If 
  
  If siX < -5 Then                                                                              'If the Ball was not 'Batted' by the LH Bat then..
    Inc siLScore                                                                                'Increase the RH score
    If siLScore > 998 Then bGameEnd = True                                                      'If you get to 999 that's enough!
    Break                                                                                       'Get out of here
  Endif

  If siX > PanelPlayArea.Width + 5 Then                                                         'If the Ball was not 'Batted' by the RH Bat then..
    Inc siRScore                                                                                'Increase the LH score
    If siLScore > 998 Then bGameEnd = True                                                      'If you get to 999 that's enough!
    Break                                                                                       'Get out of here
  Endif 

  hBall.Y = siY                                                                                 'Set Ball position (Vertical)
  hBall.X = siX                                                                                 'Set Ball position (Horizontal)
  BatL.Y = siBatL                                                                               'Set the LH Bat position (Vertical)
  BatR.Y = siBatR                                                                               'Set the RH Bat position (Vertical)
  PanelPlayArea.Background = Color.Black                                                        'Set the 'Play area' background to black

 Wait                                                                                           'Wiz around the 'Event loop'
 
 If bGameEnd = True Then                                                                        'If the game is over
   Stop Event                                                                                   'Stop any Event
   Break                                                                                        'Get out of here
 Endif

Loop                                                                                            'End of Do..Loop

bGameStart = False                                                                              'Set bGameStart to False
PanelPlayArea.Children.clear                                                                    'Clear the 'Play area' of Bats and Ball

LCDLabelLScore.text = Format(siRScore, "000")                                                   'Display the score
LCDLabelRScore.text = Format(siLScore, "000")                                                   'Display the score

Wait                                                                                            'Wiz around the 'Event loop'

Catch                                                                                           'Every effort is being made not to leave the keyboard settings in 'Game' mode on exit
  ResetKeyboardDelayAndRate                                                                     'Reset the keyboard delay and rate settings

End

Public Sub Form_KeyPress()                                                                      'To capture the users key presses
Dim iCode As Integer = Key.Code                                                                 'Store the pressed key

' If iCode = Key["S"] And If Key.Control Then 
'   AllToolButtons_Click("ToolButtonPlay")
'   Return
' End If

If bGameStart = False Then Return                                                               'If the game has not started, get out of here

If iCode = Key.Esc Then bGameEnd = True                                                         'If the [Esc] key is pressed then set bGameEnd to True
If iCode = Key["A"] Then siBatL -= 10                                                           'If the 'A' key is pressed then move the LH Bat up 10 
If iCode = Key["Z"] Then siBatL += 10                                                           'If the 'Z' key is pressed then move the LH Bat down 10 
If iCode = Key.Up Then siBatR -= 10                                                             'If the 'UP' key is pressed then move the RH Bat up 10 
If iCode = Key.Down Then siBatR += 10                                                           'If the 'DOWN' key is pressed then move the RH Bat down 10 

If siBatL < 0 Then siBatL = 0                                                                   'If the LH Bat is at the top of the area stop it running off the screen
If siBatL > PanelPlayArea.Height - BatL.Height Then siBatL = PanelPlayArea.Height - BatL.Height 'If the LH Bat is at the bottom of the area stop it running off the screen
If siBatR < 0 Then siBatR = 0                                                                   'If the RH Bat is at the top of the area stop it running off the screen
If siBatR > PanelPlayArea.Height - BatR.Height Then siBatR = PanelPlayArea.Height - BatR.Height 'If the RH Bat is at the bottom of the area stop it running off the screen

End

Public Sub Form_Resize()

PanelPlayArea.Children.Clear                                                                    'Clear the 'Play area'
HBoxControl.Width = FMain.Width                                                                 'Set the width of the HBoxControl
HBoxControl.Height = 32                                                                         'Set the height of the HBoxControl
PanelPlayArea.Y = 32                                                                            'Set the 'Play area' horizontal position
PanelPlayArea.X = 0                                                                             'Set the 'Play area' vertical position
PanelPlayArea.Height = FMain.Height - 32                                                        'Set the 'Play area' height
PanelPlayArea.Width = FMain.Width                                                               'Set the 'Play area' width
StartDisplay                                                                                    'Run the StartDisplay routine

End

Public Sub AllToolButtons_Click(Optional sKey As String)                                        'To monitor all the toolbar buttons (Optional is for later use)

If Not sKey Then sKey = Last.name                                                               'If sKey is empty then sKey = the name of the toolbar button that was clicked

Select Case sKey                                                                                'Depending what's in sKey..
  Case "ToolButtonStop"                                                                         'If it's the 'Stop' button then..
    bGameEnd = True                                                                             'Set bEndGame to True
  Case "ToolButtonPlay"                                                                         'If it's the 'Play' button then..
    siLScore = 0                                                                                'Set the LH score to 0
    siRScore = 0                                                                                'Set the RH score to 0
    SetUpLCDs                                                                                   'Set up the LCD score displays
    bGameStart = True                                                                           'Set bGameStart to True
    LabelStart.Visible = False                                                                  'Hide the LabelStart
    PanelPlayArea.Children.clear                                                                'Clear the 'Play area'
    Wait                                                                                        'Wiz around the 'Event loop'
    bNewGame = True                                                                             'Set bNewGame to True
    GamePlay                                                                                    'Run the GamePlay routine
  Case "ToolButtonAbout"                                                                        'If it's the 'About' button then..
    About.ShowModal                                                                             'Show the about Form
  Case "ToolButtonExit"                                                                         'If it's the 'Exit' button then..
    Me.Close                                                                                    'Close the Form
    
End Select

End

Public Sub ResetKeyboardDelayAndRate()

Shell "xset r rate " & Settings["Delay"] & " " & Settings["Rate"]                               'Reset the keyboard settings to their original state

End

Public Sub SetNewKeyboardDelayAndRate()

Shell "xset r rate 100 52"                                                                      'Set the keyboard to ..FAST..

End

Public Sub GetExistingKeyboardDelayAndRate()                                                    'This routine finds the keyboard settings
Dim sKeyb, sTemp, sChar As String                                                               'Various variables
Dim siCount, siX, siChar As Short                                                               'Various variables
Dim siRate As New Short[]                                                                       'To store the found values

If Settings["Delay"] <> "" And Settings["Rate"] <> "" Then Return                               'If these settings have already been saved then get out of here

Shell "xset -q" To sKeyb                                                                        'Shell the output of 'xset' to sKeyb

For Each sTemp In Split(sKeyb, gb.NewLine)                                                      'For each line of text in sKeyb
  If InStr(sTemp, "auto repeat delay:") Then Break                                              'If 'auto r..' is found then this is what is required to get out of here
Next

For siCount = InStr(sTemp, ":") + 1 To Len(sTemp)                                               'Count through the text starting at the 1st ':'
  siChar = Asc(Mid(sTemp, siCount, 1))                                                          'Find the ASCII code of the character
  If siChar > 47 And siChar < 58 Then sChar &= Mid(sTemp, siCount, 1)                           'If it is a number (not text) then add it to sChar
  If siChar = 58 And siX = 0 Then                                                               'If it is ':' then..
    siRate.add(Val(sChar))                                                                      'Add the collected value to siRate[] (The keyboard delay time)
    sChar = ""                                                                                  'Reset sChar
    Inc siX                                                                                     'Increase siX
    Continue                                                                                    'Jump to the next iteration of the loop
  End If
Next

siRate.add(Val(sChar))                                                                          'Add the 2nd collected value to siRate (The keyboard repeat time)

Settings["Delay"] = siRate[0]                                                                   'Save the value as a Setting
Settings["Rate"] = siRate[1]                                                                    'Save the value as a Setting

End

Public Sub Form_Close()                                                                         'When the program closes

ResetKeyboardDelayAndRate                                                                       'Reset the keyboard to its original settings
FMain.Hide
AllToolButtons_Click("ToolButtonStop")
AllToolButtons_Click("ToolButtonExit")
Settings.Write(Me, "Window")                                                                    'Save the Forms layout on the screen
Me.Close

End

Public Sub Timer1_Timer()                                                                       'Timer (There must be a better way to do this!)

Timer1.Stop                                                                                     'Stop the Timer
LabelStart.Visible = True                                                                       'Make the LabelStart visible
StartDisplay                                                                                    'Run the StartDisplay routine

End
